.container
	.question(ng-controller="AnswerController")
		h2.question-text {{question.text | extractTranslation}}
		.row.answers
			answer-button(answer="question.answers[0]", on-click="answer(0)", result="results[0]", user-answer="userAnswer", answer-number="0", answered="answered")
			.col-md-2.separation ? 
			answer-button(answer="question.answers[1]", on-click="answer(1)", result="results[1]", user-answer="userAnswer", answer-number="1", answered="answered")
		.row.actions
			a.btn.btn-embossed.btn-primary(ng-href="/admin/questions/{{question._id}}" ng-show="identity.currentUser.isAdmin()") {{'EDIT_THIS_QUESTION' | translate}}
			.pull-right 
				a.btn.btn-embossed.btn-primary(ng-click="nextQuestion()") {{'NEXT_QUESTION' | translate}}
		.row
			.col-md-6.comments
				.row(ng-show="!identity.isAuthenticated()")
					p.text-muted {{'PLEASE' | translate}} 
						a(role="button", ng-click="openLoginModal()") {{'SIGN_YOURSELF_IN' | translate | lowercase}}
						|  {{'OR' | translate | lowercase}} 
						a(role="button", ng-click="openRegisterModal()") {{'REGISTER_YOURSELF' | translate | lowercase}}
						|  {{'TO_COMMENT' | translate | lowercase}}
				.row(ng-show="identity.isAuthenticated()")
					textarea.col-md-12(ng-model="newComment")
					.actions
						.pull-left
							ui-select.select.form-control.select-primary.select2(ng-model="sortOrder.selected", theme="select2", role="button", ng-show="question.comments.length > 0")
								ui-select-match(placeholder="Order") {{$select.selected.text}}
								ui-select-choices(repeat="item.value as item in sortOptions")
									div {{item.text}}
						.pull-right
							button.btn.btn-embossed.btn-primary(ng-click="comment(newComment)") {{'ADD_COMMENT' | translate}}
				h4 
					span(ng-if="question.comments.length == 0") {{'NO_COMMENT_YET' | translate}}
					span(ng-if="question.comments.length == 1") 1 {{'COMMENT' | translate | lowercase}}
					span(ng-if="question.comments.length > 1") {{question.comments.length}} {{'COMMENTS' | translate | lowercase}}
				.row.comment.panel.panel-default(ng-repeat="comment in question.comments |  orderBy: sortOrder.selected: true")
					.panel-heading(ng-class="comment | authorCssClass:question")
						.panel-title
							span {{comment.author.username}}
							span.text-muted(ng-show="!comment.author.username")
								i {{'ACCOUNT_DELETED' | translate}}
							a.pull-right(role="button", ng-show="identity.currentUser.isAdmin()", ng-click="deleteComment(comment._id)", title="{{'DELETE_THIS_COMMENT' | translate}}")
								span.delete-comment.glyphicon.glyphicon-remove 
							a.pull-right(role="button", ng-click="upvoteComment(comment._id)", title="{{'UPVOTE_THIS_COMMENT' | translate}}")
								span.upvote-comment.glyphicon.glyphicon-arrow-up
								span.comment-upvotes {{comment.upvotes}}
					.panel-body {{comment.text}}
						span.date {{comment.date | date : 'dd/MM/yyyy hh:mm'}}


			.col-md-5.col-md-offset-1
				.panel.panel-default.question-details.row
					.panel-heading
						h2.panel-title
							span(ng-show="!question.title") {{'DETAILS' | translate}}
							span(ng-show="!!question.title") {{question.title | extractTranslation}}
					.panel-body
						.question-detail-field.description(ng-show="!!question.description")
							span.description {{question.description | extractTranslation}}
						.question-detail-field.votes
							a(ng-click="upvote()", title="Upvote this question")
								span.icon.glyphicon.glyphicon-arrow-up
								span {{ question.upvotes }} {{'UPVOTES' | translate | lowercase}}
						.question-detail-field.answers
							span.icon.glyphicon.glyphicon-ok
							span {{ question.answers[0].votes + question.answers[1].votes }} {{'ANSWERS' | translate | lowercase}}
						.question-detail-field.tags(ng-show="question.tags.length > 0")
							span.icon.glyphicon.glyphicon-tag
							span.tag(ng-repeat="tag in question.tags") 
								a(ng-href="/questions/tag/{{tag}}")  {{tag}}
						.question-detail-field.author(ng-show="!!question.author")
							span.icon.glyphicon.glyphicon-pencil
							a(ng-show="identity.currentUser.isAdmin()", href="/admin/users/{{ question.author._id }}") {{ question.author.username }}
							span(ng-show="!identity.currentUser.isAdmin()") {{ question.author.username }}
						.question-detail-field.permalink
							span.icon.glyphicon.glyphicon-link
							a(href="/questions/{{question._id}}") {{'PERMALINK' | translate}}
						.question-detail-field
							span.icon.glyphicon.glyphicon-share-alt
							ul.share-buttons
								li
									a(ng-click="facebookShare()", role="button")
										span.socicon.socicon-facebook
								li
									a(ng-click="twitterShare()", role="button")
										span.socicon.socicon-twitter


script.
	window.fbAsyncInit = function() {
			FB.init({
				appId      : '526260170850257',
				xfbml      : true,
				version    : 'v2.2'
			});
		};
		(function(d, s, id){
			var js, fjs = d.getElementsByTagName(s)[0];
			if (d.getElementById(id)) {return;}
			js = d.createElement(s); js.id = id;
			js.src = "//connect.facebook.net/en_US/sdk.js";
			fjs.parentNode.insertBefore(js, fjs);
		}(document, 'script', 'facebook-jssdk'));
